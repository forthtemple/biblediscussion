/// Access json files to get text and images for bible books and chapters
import 'dart:convert';

import 'package:flutter/services.dart' show rootBundle;
import 'dart:math';


class Bible  {
  static Map books= {};//word = [];

  static List<Map<String, String>> booknames=[];

  static List images=[];

  static Random rng=Random();

  static  initialize() async
  {
    // holds all text and images information of bible
    final jsonStrii= await rootBundle.loadString('assets/bbejoined.json');

    books= jsonDecode(jsonStrii);
    for (final key in books.keys) {

      final bookii=books[key];
      Map<String,String> bookname={"name":bookii['book'], "value":key};
      booknames.add(bookname);

    }
    // AssetManifest.json is generated by flutter
    final manifestJson = await rootBundle.loadString('AssetManifest.json');
    final imagesi = json.decode(manifestJson).keys.where((String key) => key.startsWith('images/books'));
    images=imagesi.toList();

  }

  /// get the image for the book or chapter
  /// If random and multiple images for book or chapter then pick one at random
  static getimage(bookname, {chapter="", random=false})
  {

     if (chapter!=""&&images.contains(
           'images/books/' + bookname + "_" +chapter+ '.jpg')) {
       return 'images/books/' + bookname + "_" +chapter+ '.jpg';
     }
     var cntstr;
     if (random) {
       var cnt=1;
       final maximages=5;
       for (var i=2; i<maximages+1; i++) {
         if (images.contains(
             'images/books/' + bookname + i.toString() + '.jpg'))
           cnt = i;
       }

       int rnd = rng.nextInt(cnt);

       if (rnd == 0)
         cntstr = "";
       else
         cntstr = (rnd + 1).toString();
     } else {
       cntstr="";
     }

     var filename= 'images/books/'+bookname+cntstr+'.jpg';
     return filename;
  }

  // For display purposes pick an angle for a given chapter
  static getangelimage(chapterstr)
  {
    int chapter=int.parse(chapterstr['value'].toString());
    return 'images/angels/'+(((chapter-1) % 20)+1).toString() +'.png';
  }

  // Get the chapters of a book
  static getchapters(bookname)
  {
    final currentbook=Bible.books[bookname];
    List<Map<String, String>> chaptersii=[];

    for (final chapteritem in currentbook['chapters']) {
      Map<String,String> chaptername={"name":chapteritem['chapter'], "value":chapteritem['chapter']};
      chaptersii.add(chaptername);//.item['chapter']);
    }
    return chaptersii;
  }


}
